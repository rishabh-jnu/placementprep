// class Solution {
// public:
//     bool containsDuplicate(vector<int>& nums) {
//         unordered_map<int, int> map;

//         for(int num :nums){
//             map[num]++;
//         }
        
//         for(const auto& pair : map){
//             if(pair.second >= 2){
//                 return true;
//             }
//         }
//         return false;
//     }
// };


class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {
        unordered_map<int, int> mp;

        for (int num : nums) {
            mp[num]++;
            if (mp[num] >= 2) {
                return true;  //found Dubli
            }
        }
        return false;
    }
};
