// class Solution {
// public:
//      vector<int> twoSum(vector<int>& nums, int target) {
        
//         vector<int>result;

//         for(int i=0; i<nums.size(); i++)
//         {
//             for(int j=i+1; j<nums.size(); j++)
//             {
//                 if(nums[i] + nums[j] == target)
//                 {
//                     result.push_back(i);
//                     result.push_back(j);
//                     return result;
//                 }

//             }
//         }
//         return result;
//     }
// };


class Solution {
public:
     vector<int> twoSum(vector<int>& nums, int target) {
        
        unordered_map<int ,int>map;

        for(int i=0; i<nums.size(); i++)
        {
            int prevStored = target - nums[i];
            if(map.find(prevStored) != map.end()){
                return {map[prevStored] , i};
            }

            map[nums[i]] = i;
        }
        return {};
    }
};
