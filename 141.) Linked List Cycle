/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
// class Solution {
// public:
//     bool hasCycle(ListNode *head) {
//         map<ListNode*, bool>table;

//         ListNode*temp = head;
//         while(temp != nullptr)
//         {
//             if(table[temp]==false)
//             {
//                 table[temp]=true;
//             }
//             else
//             {
//                 return true;
//             }
//             temp = temp-> next;
//         }
//         return false;
        
//     }
// };


class Solution {
public:
    bool hasCycle(ListNode *head) {
        unordered_map<ListNode*, bool>mapping;

        ListNode* temp = head;
        while(temp != NULL){
            if(mapping.find(temp) != mapping.end()){
                return true;
            }
            else{
                mapping[temp] = true;
            }
            temp = temp->next;
        }
        return false;
    }
};
